{"ast":null,"code":"var _jsxFileName = \"/home/sumanjit/projects/dappcord/src/components/Messages.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState, useRef } from 'react';\nimport { io } from \"socket.io-client\";\n\n// Assets\nimport person from '../assets/person.svg';\nimport send from '../assets/send.svg';\n\n// Socket\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('ws://localhost:3030');\nconst Messages = _ref => {\n  _s();\n  let {\n    account,\n    messages,\n    currentChannel\n  } = _ref;\n  const messageEndRef = useRef(null);\n  const sendMessage = async e => {\n    e.preventDefault();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"text\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"messages\",\n      children: [currentChannel && messages.filter(message => message.channel === currentChannel.id.toString()).map((message, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: person,\n          alt: \"Person\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"message_content\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: message.account.slice(0, 6) + '...' + message.account.slice(38, 42)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n        ref: messageEndRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [currentChannel && account ? /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        placeholder: `Message #${currentChannel.name}`,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: \"\",\n        placeholder: `Please Connect Wallet / Join the Channel`,\n        disabled: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: send,\n          alt: \"Send Message\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Messages, \"mtFz3Sds4B2vjJJomoA7426Ev1Q=\");\n_c = Messages;\nexport default Messages;\nvar _c;\n$RefreshReg$(_c, \"Messages\");","map":{"version":3,"names":["useEffect","useState","useRef","io","person","send","socket","Messages","account","messages","currentChannel","messageEndRef","sendMessage","e","preventDefault","filter","message","channel","id","toString","map","index","slice","text","name","setMessage","target","value"],"sources":["/home/sumanjit/projects/dappcord/src/components/Messages.js"],"sourcesContent":["import { useEffect, useState, useRef } from 'react'\r\nimport { io } from \"socket.io-client\"\r\n\r\n// Assets\r\nimport person from '../assets/person.svg'\r\nimport send from '../assets/send.svg'\r\n\r\n// Socket\r\nconst socket = io('ws://localhost:3030')\r\n\r\nconst Messages = ({ account, messages, currentChannel }) => {\r\n\r\n  const messageEndRef = useRef(null)\r\n  const sendMessage = async(e) => {\r\n    e.preventDefault()\r\n  }\r\n\r\n  return (\r\n    <div className=\"text\">\r\n      <div className=\"messages\">\r\n        {currentChannel && messages.filter(message => message.channel === currentChannel.id.toString()).map((message, index) => (\r\n          <div className=\"message\" key={index}>\r\n          <img src={person} alt=\"Person\" />\r\n          <div className=\"message_content\">\r\n            <h3>{message.account.slice(0, 6) + '...' + message.account.slice(38, 42)}</h3>\r\n            <p>\r\n              {message.text}\r\n            </p>\r\n          </div>\r\n        </div>\r\n        ))}\r\n\r\n        <div ref={messageEndRef} />\r\n\r\n      </div>\r\n\r\n      <form onSubmit={sendMessage}>\r\n        {currentChannel && account ? (\r\n          <input type=\"text\" value={message} placeholder={`Message #${currentChannel.name}`} onChange={(e) => setMessage(e.target.value)} />\r\n        ) : (\r\n          <input type=\"text\" value=\"\" placeholder={`Please Connect Wallet / Join the Channel`} disabled />\r\n        )}\r\n\r\n        <button type=\"submit\">\r\n          <img src={send} alt=\"Send Message\" />\r\n        </button>\r\n      </form>\r\n\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Messages;"],"mappings":";;AAAA,SAASA,SAAS,EAAEC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AACnD,SAASC,EAAE,QAAQ,kBAAkB;;AAErC;AACA,OAAOC,MAAM,MAAM,sBAAsB;AACzC,OAAOC,IAAI,MAAM,oBAAoB;;AAErC;AAAA;AACA,MAAMC,MAAM,GAAGH,EAAE,CAAC,qBAAqB,CAAC;AAExC,MAAMI,QAAQ,GAAG,QAA2C;EAAA;EAAA,IAA1C;IAAEC,OAAO;IAAEC,QAAQ;IAAEC;EAAe,CAAC;EAErD,MAAMC,aAAa,GAAGT,MAAM,CAAC,IAAI,CAAC;EAClC,MAAMU,WAAW,GAAG,MAAMC,CAAC,IAAK;IAC9BA,CAAC,CAACC,cAAc,EAAE;EACpB,CAAC;EAED,oBACE;IAAK,SAAS,EAAC,MAAM;IAAA,wBACnB;MAAK,SAAS,EAAC,UAAU;MAAA,WACtBJ,cAAc,IAAID,QAAQ,CAACM,MAAM,CAACC,OAAO,IAAIA,OAAO,CAACC,OAAO,KAAKP,cAAc,CAACQ,EAAE,CAACC,QAAQ,EAAE,CAAC,CAACC,GAAG,CAAC,CAACJ,OAAO,EAAEK,KAAK,kBACjH;QAAK,SAAS,EAAC,SAAS;QAAA,wBACxB;UAAK,GAAG,EAAEjB,MAAO;UAAC,GAAG,EAAC;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAG,eACjC;UAAK,SAAS,EAAC,iBAAiB;UAAA,wBAC9B;YAAA,UAAKY,OAAO,CAACR,OAAO,CAACc,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,KAAK,GAAGN,OAAO,CAACR,OAAO,CAACc,KAAK,CAAC,EAAE,EAAE,EAAE;UAAC;YAAA;YAAA;YAAA;UAAA,QAAM,eAC9E;YAAA,UACGN,OAAO,CAACO;UAAI;YAAA;YAAA;YAAA;UAAA,QACX;QAAA;UAAA;UAAA;UAAA;QAAA,QACA;MAAA,GAPwBF,KAAK;QAAA;QAAA;QAAA;MAAA,QASpC,CAAC,eAEF;QAAK,GAAG,EAAEV;MAAc;QAAA;QAAA;QAAA;MAAA,QAAG;IAAA;MAAA;MAAA;MAAA;IAAA,QAEvB,eAEN;MAAM,QAAQ,EAAEC,WAAY;MAAA,WACzBF,cAAc,IAAIF,OAAO,gBACxB;QAAO,IAAI,EAAC,MAAM;QAAC,KAAK,EAAEQ,OAAQ;QAAC,WAAW,EAAG,YAAWN,cAAc,CAACc,IAAK,EAAE;QAAC,QAAQ,EAAGX,CAAC,IAAKY,UAAU,CAACZ,CAAC,CAACa,MAAM,CAACC,KAAK;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,gBAElI;QAAO,IAAI,EAAC,MAAM;QAAC,KAAK,EAAC,EAAE;QAAC,WAAW,EAAG,0CAA0C;QAAC,QAAQ;MAAA;QAAA;QAAA;QAAA;MAAA,QAC9F,eAED;QAAQ,IAAI,EAAC,QAAQ;QAAA,uBACnB;UAAK,GAAG,EAAEtB,IAAK;UAAC,GAAG,EAAC;QAAc;UAAA;UAAA;UAAA;QAAA;MAAG;QAAA;QAAA;QAAA;MAAA,QAC9B;IAAA;MAAA;MAAA;MAAA;IAAA,QACJ;EAAA;IAAA;IAAA;IAAA;EAAA,QAGH;AAEV,CAAC;AAAA,GAzCKE,QAAQ;AAAA,KAARA,QAAQ;AA2Cd,eAAeA,QAAQ;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}